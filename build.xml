<project name="atk" default="dist" basedir=".">

    <!-- Ajout de la tâche Sonar pour Ant. -->
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
        <!-- Cette librairie peut aussi être ajoutée dans le répertoire ${ANT_HOME\}/lib -->
        <!-- Dans ce cas, le node classpath ci-dessous est inutile. -->
        <classpath path="C:/DevProgramFiles/jar/sonar-ant-task-2.1.jar" /> 
    </taskdef>
    
    <!-- Propriétés propres à Sonar, par exemple pour MySQL : -->
    <property name="sonar.jdbc.url" 
        value="jdbc:h2:tcp://localhost:9092/sonar" />
    <property name="sonar.jdbc.driverClassName" value="org.h2.Driver" />
    <property name="sonar.jdbc.username" value="sonar" />
    <property name="sonar.jdbc.password" value="sonar" />
    
	<!-- import distrib directory properties-->
	<property file="build.properties" />

	
	
	<!-- compile all plugins -->
	<target name="build" >
        <mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}"
        	verbose="no" debug="yes" encoding="UTF-8" >

        	<classpath>
            	<fileset dir="${lib.dir}">
            	        <include name="*.jar"/>
            	 </fileset>
            </classpath>
            <exclude name="com/orange/atk/tests/**"/>
        </javac>
	</target>


	<!-- deploy all plugins and lib into dist. directory-->
	<target name="dist" depends="build">
		<!--copie ressource injar-->
        <copy todir="${build.dir}/com/orange/atk/scriptRecorder">
           <fileset dir="${src.dir}/com/orange/atk/scriptRecorder">
            <include name="*.png"/>
            <include name="*.PNG"/>
            <include name="*.gif"/>
            <include name="*.jpeg"/>
            <include name="*.jpg"/>
           </fileset>
        </copy>
		
		<!-- UNCOMMENT TO BUILD RELEASE WITH EMULATOR -->
        <!-- <copy todir="${build.dir}/com/orange/atk/scriptRecorder/keyboard">
           <fileset dir="${src.dir}/com/orange/atk/scriptRecorder/keyboard">
            <include name="*.png"/>
            <include name="*.PNG"/>
            <include name="*.gif"/>
            <include name="*.jpeg"/>
            <include name="*.jpg"/>
           </fileset>
        </copy> -->

        <copy todir="${build.dir}/com/orange/atk/internationalization">
           <fileset dir="${src.dir}/com/orange/atk/internationalization">
            <include name="*.properties"/>
           </fileset>
        </copy>
		
            <copy todir="${build.dir}/com/orange/atk/deviceDetectionUI">
               <fileset dir="${src.dir}/com/orange/atk/deviceDetectionUI">
                <include name="*.png"/>
                <include name="*.PNG"/>
                <include name="*.gif"/>
                <include name="*.jpeg"/>
                <include name="*.jpg"/>
               </fileset>
            </copy>
		<copy todir="${build.dir}/com/orange/atk/phone/android/wizard/images">
               <fileset dir="${src.dir}/com/orange/atk/phone/android/wizard/images">
                <include name="*.png"/>
                <include name="*.PNG"/>
                <include name="*.gif"/>
                <include name="*.jpeg"/>
                <include name="*.jpg"/>
               </fileset>
        </copy>
			
		
		<mkdir dir="${dist.dir}/jar" />

		<jar jarfile="${dist.dir}/jar/ATK.jar" excludes="com/orange/atk/phone/android/**" basedir="${build.dir}">
		</jar>
         <jar destfile="${dist.dir}/jar/plugins/android.jar"
           basedir="${build.dir}"  includes="com/orange/atk/phone/android/**">
        </jar>

		<!--copy ressouce out the jar-->
	       <copy todir="${dist.dir}/jar">
	           <fileset dir="${lib.dir}">
	               <include name="*.jar"/>
	           </fileset>
	        </copy>

        <copy todir="${dist.dir}/res">
            <fileset dir="res"/>
          </copy>
        
        <copy todir="${dist.dir}/AndroidTools">
            <fileset dir="AndroidTools">
                <exclude name="ATKMonitor/**"/>
                <exclude name="ATKWizard/**"/>
            </fileset>
          </copy>
		  
	</target>
		
	<!-- Build a zip for installation on windows
	  	 To be used after a dist* target to build the win_pack zip of this distrib 
	  -->
	<target name="linux_pack">
	    <delete dir="dist/linux"/>
		<mkdir dir="dist/linux"/>

		<!-- Copy dist into the windist directory -->
		<copy todir="dist/linux">
		   <fileset dir="${dist.dir}">
				<!-- to be sure to not distribute a license this way -->
				<exclude name="**/*.exe"/>
				<exclude name="**/*.log"/>
				<exclude name="**/*.bat"/>
				<exclude name="**/*.nsi"/>
				<exclude name="**/*.dll"/>
				<exclude name="**/*.zip"/>
				<exclude name="**/launch4j/**"/>
		   </fileset>
		</copy>
			
		<zip destfile="install/ATK_linux_snapshot.zip" update="no">
			<zipfileset dir="dist/linux" prefix="ATK"/>   
		</zip>
	</target>
	
	<!-- clean all builded artifacts -->
	<target name="clean">
		<delete file="REVISION.xml"/>
		<!-- call plugin's build.xml-->
		<iterate target="clean"/>
	</target>

	<!-- clean dist artifacts -->
	<target name="clean_dist">
		<delete dir="${dist}/plugins" />
	</target>

	<!-- clean dist_zip artifacts -->
	<target name="clean_dist_zip">
		<xmlproperty file="REVISION.xml"/>
		<delete>
		    <fileset dir="." includes="matos_r${info.entry(revision)}.zip"/>
		</delete>
	</target>

	<!-- clean win_pack artifacts -->
	<target name="clean_linux_pack">
		<delete dir="dist/linux"/>
	</target>

	<!-- clean jpf's temp directory -->
	<target name="clean_temp">
		<delete dir="temp" />
	</target>

	<!-- clean all eclipse's builds -->
	<target name="clean_eclipse_build">
		<!-- call plugin's build.xml-->
		<iterate target="clean_eclipse_build"/>

		<delete dir="classes" />
	</target>

	<!-- clean all test's artifacts -->
	<target name="clean_test">
		<!-- call plugin's build.xml-->
		<iterate target="clean_test"/>

		<delete includeEmptyDirs="true">
			<fileset dir="${basedir}" includes="testreport*/**" />
		</delete>
	</target>

	<!-- clean all want can be rebuilded -->
	<target name="clean_all" depends="clean_dist, clean_dist_zip, clean_linux_pack, clean, clean_eclipse_build, clean_temp"/>

	<!-- run tests -->
	<target name="test" depends="build">
		
	</target>
	
	<target name="unittest">
	    <tstamp>
            <format property="PRECISE_TIMESATMP" pattern="yyyy-MM-dd_H:mm:ss" locale="en,FR" />
        </tstamp>
        <property name="testreport_now" value="${basedir}/testreport_${PRECISE_TIMESATMP}" />
        <junitreport todir="${testreport_now}">
            <fileset dir="plugins">
                <include name="**/TEST-*.xml" />
            </fileset>
        <report format="frames" todir="${basedir}/testreport/html" />
        </junitreport>
        <echo>Test report generated in ${basedir}/testreport/html/index.html</echo>
	</target>
	
	<target name="sonar">
        <!-- On définit les propriétés obligatoires pour Sonar -->
        <property name="sonar.sources" value="src" />

        <!-- On définit les propriétés optionnelles pour Sonar -->
        <property name="sonar.projectName" value="ATK" />
        <property name="sonar.binaries" value="build" />
        <!-- property name="sonar.tests" value="list of test source directories separated by a comma" / -->

        <property name="sonar.projectKey" value="com.orange.atk:atk" />
        <property name="sonar.projectVersion" value="2.17" />
        <sonar:sonar xmlns:sonar="antlib:org.sonar.ant"/>
    </target>

	<!-- print some help -->
	<target name="help">
		<echo>Matos's build.xml:</echo>
		<echo>--- Main targets ---</echo>
		<echo>clean      : clean artifacts builded with ant</echo>
		<echo>clean_dist : remove distrib. directory</echo>
		<echo>clean_all  : clean all builded artifacts (including eclipse's ones) and clean_dist</echo>
		<echo>build      : compile all plugins</echo>
		<echo>dist       : create distrib directories and copy all builded artifacts (jar files, xml files, ...) (distrib directory is defined in build.properties)</echo>
		<echo>test       : runs junit tests</echo>
		<echo>help       : print this help</echo>
	</target>

</project>
